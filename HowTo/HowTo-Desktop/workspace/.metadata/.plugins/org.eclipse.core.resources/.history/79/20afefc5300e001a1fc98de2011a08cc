package bd.daos;

import java.sql.*;

import bd.*;
import bd.dbos.*;
import bd.core.MeuResultSet; 

public class Ajudantes
{
    public static boolean cadastrado (int id) throws Exception
    {
        boolean retorno = false;

        try
        {
            String sql;

            sql = "SELECT * " +
                  "FROM AJUDANTE " +
                  "WHERE IDAJUDANTE = ?";

            BDSQLServer.COMANDO.prepareStatement (sql);

            BDSQLServer.COMANDO.setInt (1, id);

            MeuResultSet resultado = (MeuResultSet)BDSQLServer.COMANDO.executeQuery ();

            retorno = resultado.first();
        }
        catch (SQLException erro)
        {
            throw new Exception ("Erro ao procurar livro");
        }

        return retorno;
    }
    
    public static boolean cadastrado (String email) throws Exception
    {
        boolean retorno = false;

        try
        {
            String sql;

            sql = "SELECT * " +
                  "FROM AJUDANTE " +
                  "WHERE EMAIL = ?";

            BDSQLServer.COMANDO.prepareStatement (sql);

            BDSQLServer.COMANDO.setString (1, email);

            MeuResultSet resultado = (MeuResultSet)BDSQLServer.COMANDO.executeQuery ();

            retorno = resultado.first();
        }
        catch (SQLException erro)
        {
            throw new Exception ("Erro ao procurar ajudante");
        }

        return retorno;
    }

    public static void incluir (Ajudante ajudante) throws Exception
    {
        if (ajudante==null)
            throw new Exception ("Ajudante nao fornecido");

        try
        {
            String sql;

            sql = "INSERT INTO AJUDANTE " +
                  "(NOME,EMAIL,SENHA) " +
                  "VALUES " +
                  "(?,?,?)";

            BDSQLServer.COMANDO.prepareStatement (sql);

            BDSQLServer.COMANDO.setString (1, ajudante.getNome ());
            BDSQLServer.COMANDO.setString  (2, ajudante.getEmail ());
            BDSQLServer.COMANDO.setString  (3, ajudante.getSenha ());

            BDSQLServer.COMANDO.executeUpdate ();
            BDSQLServer.COMANDO.commit        ();
        }
        catch (SQLException erro)
        {
          //BDSQLServer.COMANDO.rollback ();
            throw new Exception ("Erro ao inserir ajudante");
        }
    }

    public static void excluir (int id) throws Exception
    {
        if (!cadastrado (id))
            throw new Exception ("Nao cadastrado");

        try
        {
            String sql;

            sql = "DELETE FROM AJUDANTE " +
                  "WHERE IDAJUDANTE=?";

            BDSQLServer.COMANDO.prepareStatement (sql);

            BDSQLServer.COMANDO.setInt (1, id);

            BDSQLServer.COMANDO.executeUpdate ();
            BDSQLServer.COMANDO.commit        ();
        }
        catch (SQLException erro)
        {
          //BDSQLServer.COMANDO.rollback ();
            throw new Exception ("Erro ao excluir ajudante");
        }
    }

    public static void alterar (Ajudante ajudante) throws Exception
    {
        if (ajudante==null)
            throw new Exception ("Ajudante nao fornecido");

        if (!cadastrado (ajudante.getIdAjudante()))
            throw new Exception ("Nao cadastrado");

        try
        {
            String sql;

            sql = "UPDATE AJUDANTE " +
                  "SET NOME=? " +
                  "SET EMAIL=? " +
                  "SET SENHA=? " +
                  "WHERE IDAJUDANTE = ?";

            BDSQLServer.COMANDO.prepareStatement (sql);

            BDSQLServer.COMANDO.setString (1, ajudante.getNome ());
            BDSQLServer.COMANDO.setString (2, ajudante.getEmail ());
            BDSQLServer.COMANDO.setString (3, ajudante.getSenha ());
            BDSQLServer.COMANDO.setString    (4, ajudante.getSenha ());

            BDSQLServer.COMANDO.executeUpdate ();
            BDSQLServer.COMANDO.commit        ();
        }
        catch (SQLException erro)
        {
          //BDSQLServer.COMANDO.rollback ();
            throw new Exception ("Erro ao atualizar dados de ajudante");
        }
    }

    public static Ajudante getAjudante (int id) throws Exception
    {
    	Ajudante ajudante = null;

        try
        {
            String sql;

            sql = "SELECT * " +
                  "FROM AJUDANTE " +
                  "WHERE IDAJUDANTE = ?";

            BDSQLServer.COMANDO.prepareStatement (sql);

            BDSQLServer.COMANDO.setInt (1, id);

            MeuResultSet resultado = (MeuResultSet)BDSQLServer.COMANDO.executeQuery ();

            if (!resultado.first())
                throw new Exception ("Nao cadastrado");

            ajudante = new Ajudante (resultado.getInt    ("IDAJUDANTE"),
                               		 resultado.getString ("NOME"),
                               		 resultado.getString ("EMAIL"),
                               		 resultado.getString ("SENHA"));
        }
        catch (SQLException erro)
        {
            throw new Exception ("Erro ao procurar ajudante");
        }

        return ajudante;
    }
    
    public static Ajudante getAjudante (String email) throws Exception
    {
    	Ajudante ajudante = null;

        try
        {
            String sql;

            sql = "SELECT * " +
                  "FROM AJUDANTE " +
                  "WHERE EMAIL = ?";

            BDSQLServer.COMANDO.prepareStatement (sql);

            BDSQLServer.COMANDO.setString (1, email);

            MeuResultSet resultado = (MeuResultSet)BDSQLServer.COMANDO.executeQuery ();

            if (!resultado.first())
                throw new Exception ("Nao cadastrado");

            ajudante = new Ajudante (resultado.getInt    ("IDAJUDANTE"),
                               		 resultado.getString ("NOME"),
                               		 resultado.getString ("EMAIL"),
                               		 resultado.getString ("SENHA"));
        }
        catch (SQLException erro)
        {
            throw new Exception ("Erro ao procurar ajudante");
        }

        return ajudante;
    }

    public static MeuResultSet getAjudantes () throws Exception
    {
        MeuResultSet resultado = null;

        try
        {
            String sql;

            sql = "SELECT * " +
                  "FROM AJUDANTES";

            BDSQLServer.COMANDO.prepareStatement (sql);

            resultado = (MeuResultSet)BDSQLServer.COMANDO.executeQuery ();
        }
        catch (SQLException erro)
        {
            throw new Exception ("Erro ao recuperar ajudantes");
        }

        return resultado;
    }
}